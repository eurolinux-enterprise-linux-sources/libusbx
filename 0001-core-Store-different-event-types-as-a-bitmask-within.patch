From 9e2e370574ddedc1ad2e47a20bb0a8a85bd2249d Mon Sep 17 00:00:00 2001
From: Chris Dickens <christopher.a.dickens@gmail.com>
Date: Wed, 9 Dec 2015 23:45:21 -0800
Subject: [PATCH 1/3] core: Store different event types as a bitmask within the
 context

This change introduces a new event_flags member to the libusb_context
that holds a bitmask of different events that have occurred. This will
allow multiple "one-shot" events (those that don't require counting) to
be stored in a single variable. The only existing event of this type,
pollfds_modified, has been converted to use this bitmask instead.

Signed-off-by: Chris Dickens <christopher.a.dickens@gmail.com>
---
 libusb/io.c           |  8 ++++----
 libusb/libusbi.h      | 16 +++++++++++-----
 libusb/version_nano.h |  2 +-
 3 files changed, 16 insertions(+), 10 deletions(-)

diff --git a/libusb/io.c b/libusb/io.c
index 279288c..ce0abb9 100644
--- a/libusb/io.c
+++ b/libusb/io.c
@@ -2055,7 +2055,7 @@ static int handle_events(struct libusb_context *ctx, struct timeval *tv)
 	/* only reallocate the poll fds when the list of poll fds has been modified
 	 * since the last poll, otherwise reuse them to save the additional overhead */
 	usbi_mutex_lock(&ctx->event_data_lock);
-	if (ctx->pollfds_modified) {
+	if (ctx->event_flags & USBI_EVENT_POLLFDS_MODIFIED) {
 		usbi_dbg("poll fds modified, reallocating");
 
 		if (ctx->pollfds) {
@@ -2081,7 +2081,7 @@ static int handle_events(struct libusb_context *ctx, struct timeval *tv)
 		}
 
 		/* reset the flag now that we have the updated list */
-		ctx->pollfds_modified = 0;
+		ctx->event_flags &= ~USBI_EVENT_POLLFDS_MODIFIED;
 
 		/* if no further pending events, clear the event pipe so that we do
 		 * not immediately return from poll */
@@ -2125,7 +2125,7 @@ redo_poll:
 		usbi_mutex_lock(&ctx->event_data_lock);
 
 		/* check if someone added a new poll fd */
-		if (ctx->pollfds_modified)
+		if (ctx->event_flags & USBI_EVENT_POLLFDS_MODIFIED)
 			usbi_dbg("someone updated the poll fds");
 
 		/* check if someone is closing a device */
@@ -2583,7 +2583,7 @@ static void usbi_fd_notification(struct libusb_context *ctx)
 	/* Record that there is a new poll fd.
 	 * Only signal an event if there are no prior pending events. */
 	pending_events = usbi_pending_events(ctx);
-	ctx->pollfds_modified = 1;
+	ctx->event_flags |= USBI_EVENT_POLLFDS_MODIFIED;
 	if (!pending_events)
 		usbi_signal_event(ctx);
 }
diff --git a/libusb/libusbi.h b/libusb/libusbi.h
index 822612e..40ae608 100644
--- a/libusb/libusbi.h
+++ b/libusb/libusbi.h
@@ -287,18 +287,19 @@ struct libusb_context {
 	/* A lock to protect internal context event data. */
 	usbi_mutex_t event_data_lock;
 
+	/* A bitmask of flags that are set to indicate specific events that need to
+	 * be handled. Protected by event_data_lock. */
+	unsigned int event_flags;
+
 	/* A counter that is set when we want to interrupt and prevent event handling,
 	 * in order to safely close a device. Protected by event_data_lock. */
 	unsigned int device_close;
 
 	/* list and count of poll fds and an array of poll fd structures that is
-	 * (re)allocated as necessary prior to polling, and a flag to indicate
-	 * when the list of poll fds has changed since the last poll.
-	 * Protected by event_data_lock. */
+	 * (re)allocated as necessary prior to polling. Protected by event_data_lock. */
 	struct list_head ipollfds;
 	struct pollfd *pollfds;
 	POLL_NFDS_TYPE pollfds_cnt;
-	unsigned int pollfds_modified;
 
 	/* A list of pending hotplug messages. Protected by event_data_lock. */
 	struct list_head hotplug_msgs;
@@ -315,9 +316,14 @@ struct libusb_context {
 	struct list_head list;
 };
 
+enum usbi_event_flags {
+	/* The list of pollfds has been modified */
+	USBI_EVENT_POLLFDS_MODIFIED = 1 << 0,
+};
+
 /* Update the following macro if new event sources are added */
 #define usbi_pending_events(ctx) \
-	((ctx)->device_close || (ctx)->pollfds_modified \
+	((ctx)->event_flags || (ctx)->device_close \
 	 || !list_empty(&(ctx)->hotplug_msgs) || !list_empty(&(ctx)->completed_transfers))
 
 #ifdef USBI_TIMERFD_AVAILABLE
diff --git a/libusb/version_nano.h b/libusb/version_nano.h
index 4afcd97..7abae0e 100644
--- a/libusb/version_nano.h
+++ b/libusb/version_nano.h
@@ -1 +1 @@
-#define LIBUSB_NANO 11004
+#define LIBUSB_NANO 11005
-- 
2.7.4

